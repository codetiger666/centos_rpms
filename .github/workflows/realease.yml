name: release
on:
  workflow_dispatch:
      inputs:
        program:
          description: '软件名称'
          required: true
          type: choice
          options:
            - openresty
            - nezha-agent
            - onedrive
            - openssh-server
            - frp
            - gitea
            - alist
            - git
            - vaultwarden
            - hysteria
        version:
          description: '软件版本'
          required: true
          default: '1.0'
        release:
          description: '系统版本'
          required: true
          default: '9'
          type: choice
          options:
            - 9
            - 7
        remove:
          description: '是否删除历史版本'
          required: false
          default: 'true'
          type: choice
          options:
            - 'true'
            - 'false'
        ssh:
          description: '是否开启ssh调试'
          required: true
          default: 'false'
          type: choice
          options:
            - 'true'
            - 'false'

env:
  REMOVE_WORKFLOW_RUNS: true

jobs:

  build:
    name: build-rpms-${{ github.event.inputs.program }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          # sudo apt remove php* dotnet* google* 
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php

      # 初始化环境变量
      - name: init-env
        run: |
          echo "export project_program=${{ github.event.inputs.program }}" >> $HOME/.profile
          echo "export project_version=${{ github.event.inputs.version }}" >> $HOME/.profile
          echo "export project_arch=${{ matrix.arch }}" >> $HOME/.profile
          source $HOME/.profile

      - name: run-rocky ${{ github.event.inputs.program }}-${{ matrix.arch }}
        # 出错继续
        continue-on-error: true
        run: |
          mkdir rpm
          case ${{ matrix.arch }} in
            aarch64)
              echo "使用arm64编译"
              docker run --rm --privileged multiarch/qemu-user-static --reset --persistent yes
              wget https://github.com/multiarch/qemu-user-static/releases/download/v7.2.0-1/qemu-aarch64-static
              chmod +x qemu-aarch64-static
              centos=`docker run -itd -v $(pwd)/rpm:/opt --platform arm64 -v $(pwd)/qemu-aarch64-static:/usr/bin/qemu-aarch64-static ghcr.io/codetiger666/images/rocky:9`
              ;;
            x86_64)
              echo "使用x86编译"
              centos=`docker run -itd -v $(pwd)/rpm:/opt ghcr.io/codetiger666/images/rocky:9`
              ;;
            *)
              echo "未知架构，请检查"
              exit 0
              ;;
          esac
          echo "export centos=$centos" >> $HOME/.profile
          source $HOME/.profile
          docker cp $GITHUB_WORKSPACE/.rpmmacros $centos:/root/.rpmmacros
          docker exec -i $centos rpmdev-setuptree
          docker cp $GITHUB_WORKSPACE/.rpmmacros $centos:/root/.rpmmacros

      - name: init ${{ github.event.inputs.program }}-${{ matrix.arch }}
        run: |
          source $HOME/.profile
          if [ -f "./scripts/${{ github.event.inputs.program }}.sh" ];
          then
            source ./scripts/${{ github.event.inputs.program }}.sh
            program_init
          fi
          sudo /bin/cp specs/${{ github.event.inputs.program }}.spec rpm/rpmbuild/SPECS/${{ github.event.inputs.program }}.spec

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@main
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      # 编译
      - name: build ${{ github.event.inputs.program }}-${{ matrix.arch }}
        run: |
          source $HOME/.profile
          docker stop $centos
          docker start $centos
          docker cp $GITHUB_WORKSPACE/.rpmmacros $centos:/root/.rpmmacros
          docker exec -i $centos rpmbuild -ba --with systemd /opt/rpmbuild/SPECS/${{ github.event.inputs.program }}.spec

      # 上传文件
      - name:  upload ${{ github.event.inputs.program }}-${{ matrix.arch }}
        uses: actions/upload-artifact@main
        with:
          name: ${{ github.event.inputs.program }}-${{ matrix.arch }}
          path: rpm/rpmbuild/RPMS/${{ matrix.arch }}/${{ github.event.inputs.program }}-${{ github.event.inputs.version }}-1.el9.${{ matrix.arch }}.rpm

  upload:
    name: update-rpms-${{ github.event.inputs.program }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: ${{ github.event.inputs.program }} checkout_rpm
        uses: actions/checkout@v2
        with:
          ref: release

      - name: download ${{ github.event.inputs.program }} artifact
        uses: actions/download-artifact@main
        with:
          path: artifacts
      - name: upload ${{ github.event.inputs.program }}
        run: |
          source $HOME/.profile
          archs=("x86_64" "aarch64")
          sudo mkdir -p rocky/${{ github.event.inputs.release }}/${{ github.event.inputs.arch }}/
          git pull
          for arch in "${archs[@]}"; do
            if [ "${{ github.event.inputs.remove }}" = "true" ];
            then
              sudo rm -f rocky/${{ github.event.inputs.release }}/$arch/${{ github.event.inputs.program }}*.$arch.rpm
            fi
            sudo /bin/cp -ra ../artifacts/${{ github.event.inputs.program }}-$arch/${{ github.event.inputs.program }}-${{ github.event.inputs.version }}-1.el9.$arch.rpm rocky/${{ github.event.inputs.release }}/$arch
          done
          rm -rf $GITHUB_WORKSPACE/artifacts
          rpms=`docker run -itd -v $GITHUB_WORKSPACE:/centos_rpms ghcr.io/codetiger666/images/rocky:${{ github.event.inputs.release }}`
          for arch in "${archs[@]}"; do
            docker exec -i $rpms createrepo /centos_rpms/rocky/${{ github.event.inputs.release }}/$arch
          done

      - name: git add
        run: |
          git pull
          git config --local user.email ${{ secrets.email }}
          git config --local user.name "codetiger666"
          # 创建一个新的孤立分支
          git checkout --orphan temp_main
          # 添加所有文件并进行提交
          git add -A
          git commit -m "update"
          git branch -D release
          git branch -m release
          git push -f origin release

      - name: Remove workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
